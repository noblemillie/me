{"version":3,"sources":["../../src/server/index.js"],"names":[],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AAGA;;AAGA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVA;AAYA,MAAM,MAAM,wBAAZ;;AAEA,IAAI,GAAJ,CAAQ,4BAAQ,sBAAR,CAAR;AACA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,kBAAQ,MAAR,CAAe,QAAf,EAAyB,EAAE,QAAQ,MAAV,EAAzB,CAAhB;;AAEA;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAM,WAAW,6CAAjB;;AAEA,MAAI,GAAJ,CAAQ,oCAAqB,QAArB,EAA+B;AACrC;AACA;AACA;AACA,gBAAY,sBAAiB,MAAjB,CAAwB,UAJC;AAKrC,SAAK;AALgC,GAA/B,CAAR;;AAQA,MAAI,GAAJ,CAAQ,oCAAqB,QAArB,EAA+B;AACrC,YAAQ,IAD6B,CACxB;AADwB,GAA/B,CAAR;AAGD;;AAED,IAAI,GAAJ,CAAQ,GAAR,EAAa,CAAC,GAAD,EAAM,GAAN,KAAc;;AAEzB,QAAM,QAAQ,2CAAd;AACA,QAAM,UAAU,EAAhB;;AAEA,QAAM,UAAU,4BACd;AAAA;AAAA,MAAc,UAAU,IAAI,GAA5B,EAAiC,SAAS,OAA1C;AACE;AAAA;AAAA,QAAU,OAAO,KAAjB,EAAwB,KAAI,UAA5B;AACE;AADF;AADF,GADc,CAAhB;;AAQA;AACA;AACA;AACA,QAAM,OAAO,4BACX;AACE,WAAQ,KADV;AAEE,mCAFF;AAGE,aAAW;AAHb,IADW,CAAb;;AAQA,MAAI,IAAJ,CAAS,IAAT;AACD,CAzBD;;kBA2Be,G","file":"index.js","sourcesContent":["import 'source-map-support/register';\nimport Express from 'express';\nimport favicon from 'serve-favicon';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { createStore } from 'redux';\nimport {\n  StaticRouter\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n// dev server only\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\nimport webpack from 'webpack';\n\nimport webpackDevConfig from '../../webpack/development.js';\n\nimport Layout from '../client/layout.js';\nimport reducers from '../client/reducers';\nimport Html from './root.js';\nimport assets from '../../webpack-assets.json';\n\nconst app = Express();\n\napp.use(favicon('./public/penrose.ico'));\napp.use('/pub', Express.static('public', { maxAge: '365d' }));\n\n// TODO ensure this gets DCE\nif (process.env.NODE_ENV !== 'production') {\n  const compiler = webpack(webpackDevConfig);\n\n  app.use(webpackDevMiddleware(compiler, {\n    // this tells the middleware where to send assets in memory, so\n    // if you're seeing 404's for assets it's probably because this isn't\n    // set correctly in this middleware\n    publicPath: webpackDevConfig.output.publicPath,\n    hot: true\n  }));\n\n  app.use(webpackHotMiddleware(compiler, {\n    reload: true // reload page when webpack gets stuck\n  }));\n}\n\napp.get('*', (req, res) => {\n\n  const store = createStore(reducers);\n  const context = {};\n\n  const content = renderToString(\n    <StaticRouter location={req.url} context={context}>\n      <Provider store={store} key=\"provider\">\n        <Layout />\n      </Provider>\n    </StaticRouter>\n  );\n\n  // in order for the bundled react to reconcile with the server rendered tree,\n  // we must renderToString the two different sections, so that the render from\n  // client/index has a matching tree\n  const html = renderToString(\n    <Html\n      store={ store }\n      assets={ assets }\n      content= { content }\n    />\n  );\n\n  res.send(html);\n});\n\nexport default app;\n"]}